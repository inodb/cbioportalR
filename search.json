[{"path":[]},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement karissa.whiting@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cbioportalR","title":"Contributing to cbioportalR","text":"outlines propose change cbioportalR. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cbioportalR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cbioportalR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cbioportalR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"karissawhiting/cbioportalR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cbioportalR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cbioportalR","text":"Please note cbioportalR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Karissa Whiting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/internal-structure.html","id":"guiding-principles","dir":"Articles","previous_headings":"","what":"Guiding Principles","title":"Internal Structure & Guiding Principles","text":"aim keep returned data close raw API results possible avoid additional transformations/formatting. , data returned tidy format. future may consider removing non informative columns results returning everything tibbles clean names, now keeping data raw format helps us flexible future cBioPortal API changes. try limit internal API calls within functions user explicitly ask . places deem necessary break (example .get_data_by_study() user passes study_id look molecular_profile_id), largely default slightly less informative messages/checks favor fewer hidden calls, can problematic slow internet large data sets.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/internal-structure.html","id":"general-structure","dir":"Articles","previous_headings":"","what":"General Structure","title":"Internal Structure & Guiding Principles","text":"cbp_api() internal function makes api calls (GET POST using {httr} package). user-facing internal functions paste together necessary URLs query parameters based function arguments pass . .get_data_by_study() .get_data_by_sample() internal utility functions work mutation/cna/fusion data pulls. Functions ending *_by_study() query study_id, functions ending *_by_sample() query sample ID, functions ending *_by_patient() query patient ID. genomic queries sample, need specify specific genes want query (necessary querying study_id). specified genes passed user, default IMPACT genes . specific differences functions starting available_*() starting get_*(). named according may use workflow. example, check available_profiles() study_id order get_fusions_by_study()","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview of Data Retrieval Workflow","text":"outline main data retrieval workflow functions using case study based two public sets data: 105 samples high risk nonmuscle invasive bladder cancer patients (Pietzak et al. 2017). 18 samples 18 prostate cancer patients (Granlund et al. 2020)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Overview of Data Retrieval Workflow","text":"accessing data need connect cBioPortal database set base URL R session. example use data public cBioPortal database instance (https://www.cbioportal.org). need token access public website. using private instance cBioPortal (like MSK’s institutional database), need acquire token save .Renviron file. Note: MSK researcher working IMPACT, connect MSK’s cBioPortal instance get date IMPACT data, must follow MSK-IMPACT publication guidelines using data. set database url current R session use set_cbioportal_db() function. set public instance can either provide full URL function, just public shortcut. function check connection database set url (www.cbioportal.org/api) base url connect future API calls session. can use test_cbioportal_db time throughout session check connection. can helpful troubleshooting issues API calls.","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\" test_cbioportal_db() #> ✔ You are successfully connected!"},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"get-study-metadata","dir":"Articles","previous_headings":"","what":"Get Study Metadata","title":"Overview of Data Retrieval Workflow","text":"Now successfully connected, may want view studies available chosen database find correct study_id corresponding data want pull. studies unique identifier database. can view studies available database following: inspecting data frame, see unique study_id NMIBC data set \"blca_nmibc_2017\" unique study_id prostate cancer data set \"prad_msk_2019\". get information studies can following: Note: transpose function t() just used better view results -depth information study can found get_study_info() Lastly, important know genomic data available studies. studies database data available types genomic information. example, common studies provide data fusions. can check available genomic data available_profiles(). Luckily, example studies mutation, copy number alteration fusion data available. data types unique molecular profile ID. molecular profile ID usually takes form <study_id>_mutations, <study_id>_fusion, <study_id>_cna.","code":"all_studies <- available_studies() all_studies #> # A tibble: 347 × 13 #>    studyId name  description publicStudy groups status importDate allSampleCount #>    <chr>   <chr> <chr>       <lgl>       <chr>   <int> <chr>               <int> #>  1 acc_tc… Adre… \"TCGA Adre… TRUE        \"PUBL…      0 2022-03-0…             92 #>  2 blca_p… Blad… \"Whole exo… TRUE        \"\"          0 2022-03-0…             34 #>  3 bcc_un… Basa… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…            293 #>  4 all_st… Acut… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             93 #>  5 ampca_… Ampu… \"Exome seq… TRUE        \"PUBL…      0 2022-03-0…            160 #>  6 blca_d… Blad… \"Whole exo… TRUE        \"PUBL…      0 2022-03-0…             50 #>  7 blca_m… Blad… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             97 #>  8 blca_b… Blad… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…             99 #>  9 blca_m… Blad… \"Genomic P… TRUE        \"PUBL…      0 2022-03-0…            109 #> 10 all_st… Hypo… \"Whole gen… TRUE        \"\"          0 2022-03-0…             44 #> # … with 337 more rows, and 5 more variables: readPermission <lgl>, #> #   cancerTypeId <chr>, referenceGenome <chr>, pmid <chr>, citation <chr> all_studies %>%    filter(studyId %in% c(\"blca_nmibc_2017\", \"prad_msk_2019\")) #> # A tibble: 2 × 13 #>   studyId  name  description publicStudy groups status importDate allSampleCount #>   <chr>    <chr> <chr>       <lgl>       <chr>   <int> <chr>               <int> #> 1 blca_nm… Nonm… IMPACT seq… TRUE        PUBLIC      0 2022-03-0…            105 #> 2 prad_ms… Pros… MSK-IMPACT… TRUE        PUBLIC      0 2022-03-0…             18 #> # … with 5 more variables: readPermission <lgl>, cancerTypeId <chr>, #> #   referenceGenome <chr>, pmid <chr>, citation <chr> get_study_info(\"blca_nmibc_2017\") %>%    t()  #>                             [,1]                                                                            #> name                        \"Nonmuscle Invasive Bladder Cancer (MSK Eur Urol 2017)\"                         #> description                 \"IMPACT sequencing of 105 High Risk Nonmuscle Invasive Bladder Cancer samples.\" #> publicStudy                 \"TRUE\"                                                                          #> pmid                        \"28583311\"                                                                      #> citation                    \"Pietzak et al. Eur Urol 2017\"                                                  #> groups                      \"PUBLIC\"                                                                        #> status                      \"0\"                                                                             #> importDate                  \"2022-03-04 17:49:56\"                                                           #> allSampleCount              \"105\"                                                                           #> sequencedSampleCount        \"105\"                                                                           #> cnaSampleCount              \"105\"                                                                           #> mrnaRnaSeqSampleCount       \"0\"                                                                             #> mrnaRnaSeqV2SampleCount     \"0\"                                                                             #> mrnaMicroarraySampleCount   \"0\"                                                                             #> miRnaSampleCount            \"0\"                                                                             #> methylationHm27SampleCount  \"0\"                                                                             #> rppaSampleCount             \"0\"                                                                             #> massSpectrometrySampleCount \"0\"                                                                             #> completeSampleCount         \"0\"                                                                             #> readPermission              \"TRUE\"                                                                          #> studyId                     \"blca_nmibc_2017\"                                                               #> cancerTypeId                \"blca\"                                                                          #> cancerType.name             \"Bladder Urothelial Carcinoma\"                                                  #> cancerType.dedicatedColor   \"Yellow\"                                                                        #> cancerType.shortName        \"BLCA\"                                                                          #> cancerType.parent           \"bladder\"                                                                       #> cancerType.cancerTypeId     \"blca\"                                                                          #> referenceGenome             \"hg19\" get_study_info(\"prad_msk_2019\") %>%    t()  #>                             [,1]                                                              #> name                        \"Prostate Cancer (MSK, Cell Metab 2020)\"                          #> description                 \"MSK-IMPACT Sequencing of 18 prostate cancer tumor/normal pairs.\" #> publicStudy                 \"TRUE\"                                                            #> pmid                        \"31564440\"                                                        #> citation                    \"Granlund et al. Cell Metab 2020\"                                 #> groups                      \"PUBLIC\"                                                          #> status                      \"0\"                                                               #> importDate                  \"2022-03-08 18:48:08\"                                             #> allSampleCount              \"18\"                                                              #> sequencedSampleCount        \"18\"                                                              #> cnaSampleCount              \"18\"                                                              #> mrnaRnaSeqSampleCount       \"0\"                                                               #> mrnaRnaSeqV2SampleCount     \"0\"                                                               #> mrnaMicroarraySampleCount   \"0\"                                                               #> miRnaSampleCount            \"0\"                                                               #> methylationHm27SampleCount  \"0\"                                                               #> rppaSampleCount             \"0\"                                                               #> massSpectrometrySampleCount \"0\"                                                               #> completeSampleCount         \"0\"                                                               #> readPermission              \"TRUE\"                                                            #> studyId                     \"prad_msk_2019\"                                                   #> cancerTypeId                \"prostate\"                                                        #> cancerType.name             \"Prostate\"                                                        #> cancerType.dedicatedColor   \"Cyan\"                                                            #> cancerType.shortName        \"PROSTATE\"                                                        #> cancerType.parent           \"tissue\"                                                          #> cancerType.cancerTypeId     \"prostate\"                                                        #> referenceGenome             \"hg19\" available_profiles(study_id = \"blca_nmibc_2017\") #> # A tibble: 3 × 8 #>   molecularAlterationT… datatype name  description showProfileInAn… patientLevel #>   <chr>                 <chr>    <chr> <chr>       <lgl>            <lgl>        #> 1 COPY_NUMBER_ALTERATI… DISCRETE Puta… Copy Numbe… TRUE             FALSE        #> 2 MUTATION_EXTENDED     MAF      Muta… Mutation d… TRUE             FALSE        #> 3 STRUCTURAL_VARIANT    FUSION   Fusi… Fusions.    TRUE             FALSE        #> # … with 2 more variables: molecularProfileId <chr>, studyId <chr> available_profiles(study_id = \"prad_msk_2019\") #> # A tibble: 3 × 8 #>   molecularAlterationT… datatype name  description showProfileInAn… patientLevel #>   <chr>                 <chr>    <chr> <chr>       <lgl>            <lgl>        #> 1 COPY_NUMBER_ALTERATI… DISCRETE Puta… Putative c… TRUE             FALSE        #> 2 MUTATION_EXTENDED     MAF      Muta… IMPACT468 … TRUE             FALSE        #> 3 STRUCTURAL_VARIANT    FUSION   Fusi… Fusion dat… TRUE             FALSE        #> # … with 2 more variables: molecularProfileId <chr>, studyId <chr> available_profiles(study_id = \"blca_nmibc_2017\") %>%   pull(molecularProfileId) #> [1] \"blca_nmibc_2017_cna\"       \"blca_nmibc_2017_mutations\" #> [3] \"blca_nmibc_2017_fusion\""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"pulling-genomic-data","dir":"Articles","previous_headings":"","what":"Pulling Genomic Data","title":"Overview of Data Retrieval Workflow","text":"Now inspected studies confirmed genomic data available, pull data R environment. show two ways : Using study IDs (get_genetics_by_study()) Using sample ID-study ID pairs (get_genetics_by_sample()) Pulling study give us genomic data genes/panels included study. functions can pull data one study ID time return genomic data available study. Pulling study ID can efficient, good way ensure genomic information available cBioPortal particular study. working across multiple studies, need subset samples one multiple studies, may chose pull sample IDs instead study ID. pull sample IDs can pull specific samples across multiple studies, must also specify studies belong . may also pass specific list genes return information. don’t specify list genes function default returning available gene data sample.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"by-study-ids","dir":"Articles","previous_headings":"Pulling Genomic Data","what":"By Study IDs","title":"Overview of Data Retrieval Workflow","text":"pull study ID, can pull data type individually. can pull genomic data time get_genetics_by_study() Finally, can join two studies together","code":"mut_blca <- get_mutations_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_mutations\" molecular profile in the \"blca_nmibc_2017\" study cna_blca<- get_cna_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_cna\" molecular profile in the \"blca_nmibc_2017\" study fus_blca <- get_fusions_by_study(study_id = \"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_fusion\" molecular profile in the \"blca_nmibc_2017\" study   mut_prad <- get_mutations_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study cna_prad <- get_cna_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study fus_prad <- get_fusions_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study all_genomic_blca <- get_genetics_by_study(\"blca_nmibc_2017\") #> ℹ Returning all data for the \"blca_nmibc_2017_mutations\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_cna\" molecular profile in the \"blca_nmibc_2017\" study #> ℹ Returning all data for the \"blca_nmibc_2017_fusion\" molecular profile in the \"blca_nmibc_2017\" study all_genomic_prad<- get_genetics_by_study(\"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study all_equal(mut_blca, all_genomic_blca$mutation) #> [1] TRUE all_equal(cna_blca, all_genomic_blca$cna) #> [1] TRUE all_equal(fus_blca, all_genomic_blca$fusion) #> [1] TRUE mut_study <- bind_rows(mut_blca, mut_prad) cna_study <- bind_rows(cna_blca, cna_prad) fus_study <- bind_rows(fus_blca, fus_prad)"},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"by-sample-ids","dir":"Articles","previous_headings":"Pulling Genomic Data","what":"By Sample IDs","title":"Overview of Data Retrieval Workflow","text":"pull sample IDs, can pull specific samples across multiple studies. example, can pull studies time select set samples using sample_study_pairs argument get_genetics_by_sample(). Let’s pull data first 10 samples study. first need construct dataframe pass function: Note: can also run available_patients() pull patient IDs need rename columns per functions documentation. Now pass get_genetics_by_sample() Like querying study ID, can also pull data individually genomic data type: Let’s compare results ones got pulling study: results equal.","code":"s1 <- available_samples(\"blca_nmibc_2017\") %>%   select(sampleId, patientId, studyId) %>%   head(10)  s2 <- available_samples(\"prad_msk_2019\") %>%   select(sampleId,  patientId, studyId) %>%   head(10)  df_pairs <- bind_rows(s1, s2) %>%    select(-patientId) df_pairs <- df_pairs %>%   rename(\"sample_id\" = sampleId,           \"study_id\" = studyId) all_genomic <- get_genetics_by_sample(sample_study_pairs = df_pairs) #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_mutations and prad_msk_2019_mutations #> Genes: \"All available genes\" #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_cna and prad_msk_2019_cna #> Genes: \"All available genes\" #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_fusion and prad_msk_2019_fusion #> Genes: \"All available genes\"  mut_sample <- all_genomic$mutation mut_only <- get_mutations_by_sample(sample_study_pairs = df_pairs) #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_mutations and prad_msk_2019_mutations #> Genes: \"All available genes\"  identical(mut_only, mut_sample) #> [1] TRUE # filter to our subset used in sample query mut_study_subset <- mut_study %>%   filter(sampleId %in%  df_pairs$sample_id)  # arrange to compare mut_study_subset <- mut_study_subset %>%   arrange(desc(sampleId))%>%   arrange(desc(entrezGeneId))  mut_sample <- mut_sample %>%   arrange(desc(sampleId)) %>%   arrange(desc(entrezGeneId)) %>%      # reorder so columns in same order   select(names(mut_study_subset))  all.equal(mut_study_subset, mut_sample) #> [1] TRUE"},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"limit-results-to-specified-genes-or-panels","dir":"Articles","previous_headings":"Pulling Genomic Data > By Sample IDs","what":"Limit Results to Specified Genes or Panels","title":"Overview of Data Retrieval Workflow","text":"can also limit results specific set genes passing vector Entrez Gene IDs Hugo Symbols gene argument, specified panel passing panel ID panel argument (see available_gene_panels() supported panels). can useful , example, want pull IMPACT gene results two studies one two uses much larger panel. case, can limit query just genes want results:","code":"by_hugo <- get_mutations_by_sample(sample_study_pairs = df_pairs, genes = \"TP53\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_mutations and prad_msk_2019_mutations #> Genes: \"TP53\" by_gene_id <- get_mutations_by_sample(sample_study_pairs = df_pairs, genes = 7157) #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_mutations and prad_msk_2019_mutations #> Genes: 7157  identical(by_hugo, by_gene_id) #> [1] TRUE get_mutations_by_sample(   sample_study_pairs = df_pairs,   panel = \"IMPACT468\") %>%   head() #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_nmibc_2017\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_nmibc_2017_mutations and prad_msk_2019_mutations #> Genes: \"IMPACT468\" #> # A tibble: 6 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 TERT                   7015 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> 2 SMAD4                  4089 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> 3 ERBB4                  2066 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> 4 CUL3                   8452 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> 5 PBRM1                 55193 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> 6 APC                     324 UC0wMDAxNDUzLVQ… UC0wMDAxNDUzOmJ… blca_nmibc_2017… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, chr <chr>, …"},{"path":"https://karissawhiting.github.io/cbioportalR/articles/overview-of-workflow.html","id":"pulling-clinical-data","dir":"Articles","previous_headings":"","what":"Pulling Clinical Data","title":"Overview of Data Retrieval Workflow","text":"can also pull clinical data study ID, sample ID, patient ID. Pulling sample ID pull sample-level characteristics (e.g. sample site, tumor stage sampling time variables collected time sampling may available). Pulling patient ID pull patient-level characteristics (e.g. age, sex, etc.). Pulling study ID pull sample patient-level characteristics . can explore clinical data available study using: select set available studies: pulls data sample level: pulls data patient level: Like genomic data pull functions, can also pull clinical data study ID - sample ID, ID study ID - patient ID pairs: Now pass get_genetics_by_sample()","code":"attr_blca <- available_clinical_attributes(\"blca_nmibc_2017\") attr_prad <- available_clinical_attributes(\"prad_msk_2019\")  attr_prad #> # A tibble: 13 × 7 #>    displayName   description datatype patientAttribute priority clinicalAttribu… #>    <chr>         <chr>       <chr>    <lgl>            <chr>    <chr>            #>  1 Cancer Type   Cancer Type STRING   FALSE            1        CANCER_TYPE      #>  2 Cancer Type … Cancer Typ… STRING   FALSE            1        CANCER_TYPE_DET… #>  3 Fraction Gen… Fraction G… NUMBER   FALSE            20       FRACTION_GENOME… #>  4 Gene Panel    Gene Panel. STRING   FALSE            1        GENE_PANEL       #>  5 Mutation Cou… Mutation C… NUMBER   FALSE            30       MUTATION_COUNT   #>  6 Oncotree Code Oncotree C… STRING   FALSE            1        ONCOTREE_CODE    #>  7 Sample Class  The sample… STRING   FALSE            1        SAMPLE_CLASS     #>  8 Number of Sa… Number of … STRING   TRUE             1        SAMPLE_COUNT     #>  9 Sample Type   The type o… STRING   FALSE            1        SAMPLE_TYPE      #> 10 Sex           Sex         STRING   TRUE             1        SEX              #> 11 Somatic Stat… Somatic St… STRING   FALSE            1        SOMATIC_STATUS   #> 12 Specimen Pre… The method… STRING   FALSE            1        SPECIMEN_PRESER… #> 13 TMB (nonsyno… TMB (nonsy… NUMBER   FALSE            1        TMB_NONSYNONYMO… #> # … with 1 more variable: studyId <chr> in_both <- intersect(attr_blca$clinicalAttributeId, attr_prad$clinicalAttributeId) clinical_blca <- get_clinical_by_sample(sample_id = s1$sampleId,                        study_id = \"blca_nmibc_2017\",                         clinical_attribute = in_both)  clinical_prad <- get_clinical_by_sample(sample_id = s2$sampleId,                        study_id = \"prad_msk_2019\",                         clinical_attribute = in_both)  all_clinical <- bind_rows(clinical_blca, clinical_prad)  all_clinical %>%   select(-contains(\"unique\")) %>%   head() #> # A tibble: 6 × 5 #>   sampleId          patientId studyId         clinicalAttributeId     value      #>   <chr>             <chr>     <chr>           <chr>                   <chr>      #> 1 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 CANCER_TYPE             Bladder C… #> 2 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 CANCER_TYPE_DETAILED    Bladder U… #> 3 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 FRACTION_GENOME_ALTERED 0.4448     #> 4 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 MUTATION_COUNT          11         #> 5 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 ONCOTREE_CODE           BLCA       #> 6 P-0001453-T01-IM3 P-0001453 blca_nmibc_2017 SOMATIC_STATUS          Matched p1 <- available_patients(\"blca_nmibc_2017\")  clinical_blca <- get_clinical_by_patient(patient_id = s1$patientId,                        study_id = \"blca_nmibc_2017\",                         clinical_attribute = in_both)  clinical_prad <- get_clinical_by_sample(sample_id = s2$patientId,                        study_id = \"prad_msk_2019\",                         clinical_attribute = in_both)  all_clinical <- bind_rows(clinical_blca, clinical_prad)  all_clinical %>%   select(-contains(\"unique\")) %>%   head() #> # A tibble: 6 × 4 #>   patientId studyId         clinicalAttributeId value #>   <chr>     <chr>           <chr>               <chr> #> 1 P-0001453 blca_nmibc_2017 SAMPLE_COUNT        1     #> 2 P-0001453 blca_nmibc_2017 SEX                 Male  #> 3 P-0002166 blca_nmibc_2017 SAMPLE_COUNT        1     #> 4 P-0002166 blca_nmibc_2017 SEX                 Male  #> 5 P-0003238 blca_nmibc_2017 SAMPLE_COUNT        1     #> 6 P-0003238 blca_nmibc_2017 SEX                 Male df_pairs <- bind_rows(s1, s2) %>%    select(-sampleId)  df_pairs <- df_pairs %>%   select(patientId, studyId) all_patient_clinical <- get_clinical_by_patient(patient_study_pairs = df_pairs,                                                  clinical_attribute = in_both)  all_patient_clinical %>%    select(-contains(\"unique\")) #> # A tibble: 34 × 4 #>    patientId studyId         clinicalAttributeId value  #>    <chr>     <chr>           <chr>               <chr>  #>  1 P-0001453 blca_nmibc_2017 SAMPLE_COUNT        1      #>  2 P-0001453 blca_nmibc_2017 SEX                 Male   #>  3 P-0002166 blca_nmibc_2017 SAMPLE_COUNT        1      #>  4 P-0002166 blca_nmibc_2017 SEX                 Male   #>  5 P-0003238 blca_nmibc_2017 SAMPLE_COUNT        1      #>  6 P-0003238 blca_nmibc_2017 SEX                 Male   #>  7 P-0003257 blca_nmibc_2017 SAMPLE_COUNT        1      #>  8 P-0003257 blca_nmibc_2017 SEX                 Female #>  9 P-0003261 blca_nmibc_2017 SAMPLE_COUNT        1      #> 10 P-0003261 blca_nmibc_2017 SEX                 Male   #> # … with 24 more rows"},{"path":"https://karissawhiting.github.io/cbioportalR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karissa Whiting. Author, maintainer.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Whiting K (2022). cbioportalR: R Package Access Data cBioPortal. R package version 1.0.0, https://github.com/karissawhiting/cbioportalR.","code":"@Manual{,   title = {cbioportalR: An R Package to Access Data on cBioPortal},   author = {Karissa Whiting},   year = {2022},   note = {R package version 1.0.0},   url = {https://github.com/karissawhiting/cbioportalR}, }"},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"cbioportalr-","dir":"","previous_headings":"","what":"An R Package to Access Data on cBioPortal","title":"An R Package to Access Data on cBioPortal","text":"{cbioportalR} allows access cBioPortal’s genomic clinical data sets directly R. package wraps cBioPortal’s API endpoints R users can easily leverage existing API access genomic data mutations, copy number alterations fusions well data tumor mutational burden (TMB), microsatellite instability status (MSI) select clinical data points (depending study). package created work public cBioPortal website, well private institutional cBioPortal instances (e.g. MSKCC, GENIE) appropriate credentials authentication. information cBioPortal, see following publications: Gao et al. Sci. Signal. 2013 Cerami et al. Cancer Discov. 2012 full documentation cBioPortal API, please see following links: cBioPortal API API Clients documentation Full reference documentation API Note: MSK researcher working IMPACT data, connect MSK’s cBioPortal instance get date IMPACT data, must follow MSK-IMPACT publication guidelines using data","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Package to Access Data on cBioPortal","text":"can install {cbioportalR} :","code":"remotes::install_github(\"karissawhiting/cbioportalR\") library(cbioportalR)"},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"An R Package to Access Data on cBioPortal","text":"using public domain https://www.cbioportal.org/, don’t need token start pulling data. using private instance cBioPortal (like MSKCC’s institutional database), need acquire token save .Renviron file (wherever store credentials). Simply log institution’s cBioPortal site, acquire token (Usually ‘Web API’ tab) save .Renviron file. save token environmental variable don’t hard code secret key scripts. Tip: following {usethis} function can easily find open .Renviron : Paste token given (using format ) .Renviron file save file changes. saving restart R session ensure token saved recognized. can test token saved using: every new R session, need set database URL. set_cbioportal_db() function set environmental variable session tells package database point API calls. can set point public database db = 'www.cbioportal.org' db = 'public'. using private database pass institutions cBioPortal URL db. function set URL check connection. now set remainder session! API calls depend internet connection possibly VPN connection can use following check connection time throughout session:","code":"usethis::edit_r_environ() CBIOPORTAL_TOKEN = 'YOUR_TOKEN' get_cbioportal_token() set_cbioportal_db(db = \"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\" test_cbioportal_db() #> ✔ You are successfully connected!"},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"cbioportal-data-model","dir":"","previous_headings":"","what":"cBioPortal Data Model","title":"An R Package to Access Data on cBioPortal","text":"many ways identify pull data (e.g. study ID, sample ID, molecular profile ID). understanding data organized cBioPortal help determine functions need. figure outlines general data schema cBioPortal functions access levels schema:","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An R Package to Access Data on cBioPortal","text":"see available studies database can use: view study metadata particular study can use: pull genomic data particular study can use: result, get list data frames mutation CNA data respectively. function also try pull fusion data, fusion data available study, indicated function message. can also pull data specific sample IDs API requires bit information (unlike pulling study ID returns everything available study). can useful working within large database working across samples housed multiple different studies. querying sample_id must also specify corresponding study_id samples housed. pieces information provided, {cbioportalR} makes informed guess based connection throw informative message clarify exactly queried. example , function defaults public version IMPACT database (study_id = \"msk_impact_2017\"). results returned samples stored study. specify correct study (study_id = \"acc_tcga\"), get accurate results. can check samples stored study using available_samples(study_id = \"acc_tcga\"). Lastly, can also pull clinical data study ID, sample ID patient ID. see data available, can use: functions pull study IDs limited pulling data one study time. need pull specific samples multiple studies, likely want pull sample ID (instead study ID) supply function dataframe sample_study_pairs specify function look study. information see Overview Workflow Vignette.","code":"available_studies() %>%    head(n = 10) #> # A tibble: 10 × 13 #>    studyId name  description publicStudy groups status importDate allSampleCount #>    <chr>   <chr> <chr>       <lgl>       <chr>   <int> <chr>               <int> #>  1 acc_tc… Adre… \"TCGA Adre… TRUE        \"PUBL…      0 2022-03-0…             92 #>  2 blca_p… Blad… \"Whole exo… TRUE        \"\"          0 2022-03-0…             34 #>  3 bcc_un… Basa… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…            293 #>  4 all_st… Acut… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             93 #>  5 ampca_… Ampu… \"Exome seq… TRUE        \"PUBL…      0 2022-03-0…            160 #>  6 blca_d… Blad… \"Whole exo… TRUE        \"PUBL…      0 2022-03-0…             50 #>  7 blca_m… Blad… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             97 #>  8 blca_b… Blad… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…             99 #>  9 blca_m… Blad… \"Genomic P… TRUE        \"PUBL…      0 2022-03-0…            109 #> 10 all_st… Hypo… \"Whole gen… TRUE        \"\"          0 2022-03-0…             44 #> # … with 5 more variables: readPermission <lgl>, cancerTypeId <chr>, #> #   referenceGenome <chr>, pmid <chr>, citation <chr> get_study_info(\"acc_tcga\") %>%    t() #>                             [,1]                                                                                                                                                                                              #> name                        \"Adrenocortical Carcinoma (TCGA, Firehose Legacy)\"                                                                                                                                                #> description                 \"TCGA Adrenocortical Carcinoma. Source data from <A HREF=\\\"http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/\\\">GDAC Firehose<\/A>. Previously known as TCGA Provisional.\" #> publicStudy                 \"TRUE\"                                                                                                                                                                                            #> groups                      \"PUBLIC\"                                                                                                                                                                                          #> status                      \"0\"                                                                                                                                                                                               #> importDate                  \"2022-03-04 17:47:56\"                                                                                                                                                                             #> allSampleCount              \"92\"                                                                                                                                                                                              #> sequencedSampleCount        \"90\"                                                                                                                                                                                              #> cnaSampleCount              \"90\"                                                                                                                                                                                              #> mrnaRnaSeqSampleCount       \"0\"                                                                                                                                                                                               #> mrnaRnaSeqV2SampleCount     \"79\"                                                                                                                                                                                              #> mrnaMicroarraySampleCount   \"0\"                                                                                                                                                                                               #> miRnaSampleCount            \"0\"                                                                                                                                                                                               #> methylationHm27SampleCount  \"0\"                                                                                                                                                                                               #> rppaSampleCount             \"46\"                                                                                                                                                                                              #> massSpectrometrySampleCount \"0\"                                                                                                                                                                                               #> completeSampleCount         \"75\"                                                                                                                                                                                              #> readPermission              \"TRUE\"                                                                                                                                                                                            #> studyId                     \"acc_tcga\"                                                                                                                                                                                        #> cancerTypeId                \"acc\"                                                                                                                                                                                             #> cancerType.name             \"Adrenocortical Carcinoma\"                                                                                                                                                                        #> cancerType.dedicatedColor   \"Purple\"                                                                                                                                                                                          #> cancerType.shortName        \"ACC\"                                                                                                                                                                                             #> cancerType.parent           \"adrenal_gland\"                                                                                                                                                                                   #> cancerType.cancerTypeId     \"acc\"                                                                                                                                                                                             #> referenceGenome             \"hg19\" df <- get_genetics_by_study(study_id = \"acc_tcga\") #> ℹ Returning all data for the \"acc_tcga_mutations\" molecular profile in the \"acc_tcga\" study #> ℹ Returning all data for the \"acc_tcga_gistic\" molecular profile in the \"acc_tcga\" study #> ! No \"fusion\" data returned. Error:  No molecular profile for `` data_type = `fusion` `` found in \"acc_tcga\".  See `` available_profiles('`acc_tcga`') `` df$mutation %>%    head() #> # A tibble: 6 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 KRT8                   3856 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 2 LCE1B                353132 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 3 SLC9C2               284525 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 4 DNAH14               127602 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 5 OPN4                  94233 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 6 DNAJC4                 3338 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, …  df$cna %>%    head() #> # A tibble: 6 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 MEOX1                  4222 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 2 NUFIP2                57532 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 3 OSBPL7               114881 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 4 TP53I13               90313 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 5 TAOK1                 57551 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 6 SPOP                   8405 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_gistic  #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> samples <- available_samples(study_id = \"acc_tcga\") %>%   pull(sampleId) %>%   head(n = 10)  mutations <- get_mutations_by_sample(sample_id =  samples) #> The following parameters were used in query: #> Study ID: \"msk_impact_2017\" #> Molecular Profile ID: \"msk_impact_2017_mutations\" #> Genes: \"All available genes\"  # no results returned because these samples are not in this study length(mutations) == 0 #> [1] TRUE mutations <- get_mutations_by_sample(sample_id =  samples,                                     study_id = \"acc_tcga\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\"  mutations %>%   head() #> # A tibble: 6 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 KRT8                   3856 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 2 LCE1B                353132 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 3 SLC9C2               284525 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 4 DNAH14               127602 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 5 OPN4                  94233 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 6 DNAJC4                 3338 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… acc_tcga_mutati… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … available_clinical_attributes(study_id = \"acc_tcga\") %>%   head() #> # A tibble: 6 × 7 #>   displayName    description datatype patientAttribute priority clinicalAttribu… #>   <chr>          <chr>       <chr>    <lgl>            <chr>    <chr>            #> 1 Diagnosis Age  Age at whi… NUMBER   TRUE             1        AGE              #> 2 Neoplasm Dise… The extent… STRING   TRUE             1        AJCC_PATHOLOGIC… #> 3 American Join… The versio… STRING   TRUE             1        AJCC_STAGING_ED… #> 4 Atypical Mito… Atypical M… STRING   TRUE             1        ATYPICAL_MITOTI… #> 5 Cancer Type    Cancer type STRING   FALSE            1        CANCER_TYPE      #> 6 Cancer Type D… Cancer typ… STRING   FALSE            1        CANCER_TYPE_DET… #> # … with 1 more variable: studyId <chr> get_clinical_by_study(\"acc_tcga\") #> ! Sample Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> ! Patient Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> # A tibble: 6,292 × 6 #>    uniquePatientKey           patientId studyId clinicalAttribu… value dataLevel #>    <chr>                      <chr>     <chr>   <chr>            <chr> <chr>     #>  1 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… AGE              58    PATIENT   #>  2 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… AJCC_PATHOLOGIC… Stag… PATIENT   #>  3 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… ATYPICAL_MITOTI… Atyp… PATIENT   #>  4 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CAPSULAR_INVASI… Inva… PATIENT   #>  5 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CLIN_M_STAGE     M0    PATIENT   #>  6 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CT_SCAN_PREOP_R… [Unk… PATIENT   #>  7 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CYTOPLASM_PRESE… Cyto… PATIENT   #>  8 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DAYS_TO_INITIAL… 0     PATIENT   #>  9 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DFS_MONTHS       24.77 PATIENT   #> 10 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DFS_STATUS       1:Re… PATIENT   #> # … with 6,282 more rows get_clinical_by_sample(sample_id = samples, study_id = \"acc_tcga\") %>%   head(10) #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"acc_tcga\" study #> # A tibble: 10 × 7 #>    uniqueSampleKey  uniquePatientKey sampleId patientId studyId clinicalAttribu… #>    <chr>            <chr>            <chr>    <chr>     <chr>   <chr>            #>  1 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  2 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE_DET… #>  3 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… DAYS_TO_COLLECT… #>  4 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… FRACTION_GENOME… #>  5 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… IS_FFPE          #>  6 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… MUTATION_COUNT   #>  7 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… OCT_EMBEDDED     #>  8 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… ONCOTREE_CODE    #>  9 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… OTHER_SAMPLE_ID  #> 10 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… PATHOLOGY_REPOR… #> # … with 1 more variable: value <chr> patients <- available_patients(study_id = \"acc_tcga\") %>%   pull(patientId) %>%   head(n = 10)  get_clinical_by_patient(patient_id = patients, study_id = \"acc_tcga\",                          clinical_attribute = \"AGE\") %>%   head(10)"},{"path":"https://karissawhiting.github.io/cbioportalR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"An R Package to Access Data on cBioPortal","text":"Please note {cbioportalR} released Contributor Code Conduct. contributing project, agree abide terms. Thank contributors! @arorarshi, @AxelitoMartin, @edrill, @jalavery, @ddsjoberg @karomanchuk Thank Isaak Liptzin hex sticker!","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/all_genes_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"A table to lookup Hugo Symbol by Entrez ID — all_genes_lookup","title":"A table to lookup Hugo Symbol by Entrez ID — all_genes_lookup","text":"table lookup Hugo Symbol Entrez ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/all_genes_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table to lookup Hugo Symbol by Entrez ID — all_genes_lookup","text":"","code":"all_genes_lookup"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/all_genes_lookup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A table to lookup Hugo Symbol by Entrez ID — all_genes_lookup","text":"data frame entrezGeneId entrez Gene Id hugoGeneSymbol Gene Hugo Symbol type Gene type","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_clinical_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all available clinical attribute IDs for a study — available_clinical_attributes","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"Get available clinical attribute IDs study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_clinical_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"","code":"available_clinical_attributes(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_clinical_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"study_id cbioportal study ID base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_clinical_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"data frame available clinical attributes study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_clinical_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all available clinical attribute IDs for a study — available_clinical_attributes","text":"","code":"available_clinical_attributes(\"acc_tcga\", base_url = 'www.cbioportal.org/api') #> # A tibble: 109 × 7 #>    displayName   description datatype patientAttribute priority clinicalAttribu… #>    <chr>         <chr>       <chr>    <lgl>            <chr>    <chr>            #>  1 Diagnosis Age Age at whi… NUMBER   TRUE             1        AGE              #>  2 Neoplasm Dis… The extent… STRING   TRUE             1        AJCC_PATHOLOGIC… #>  3 American Joi… The versio… STRING   TRUE             1        AJCC_STAGING_ED… #>  4 Atypical Mit… Atypical M… STRING   TRUE             1        ATYPICAL_MITOTI… #>  5 Cancer Type   Cancer type STRING   FALSE            1        CANCER_TYPE      #>  6 Cancer Type … Cancer typ… STRING   FALSE            1        CANCER_TYPE_DET… #>  7 CAPSULAR INV… CAPSULAR I… STRING   TRUE             1        CAPSULAR_INVASI… #>  8 Neoplasm Ame… Stage grou… STRING   TRUE             1        CLINICAL_STAGE   #>  9 Clinical Sta… Clinical S… STRING   TRUE             1        CLINICAL_STATUS… #> 10 Neoplasm Ame… Extent of … STRING   TRUE             1        CLIN_M_STAGE     #> # … with 99 more rows, and 1 more variable: studyId <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_gene_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Gene Panels For a Database — available_gene_panels","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"Get Available Gene Panels Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_gene_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"","code":"available_gene_panels(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_gene_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_gene_panels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"dataframe metadata regarding available panel","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_gene_panels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Gene Panels For a Database — available_gene_panels","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_gene_panels() #> # A tibble: 54 × 2 #>    description                                                       genePanelId #>    <chr>                                                             <chr>       #>  1 Targeted (27 cancer genes) sequencing of adenoid cystic carcinom… ACYC_FMI_27 #>  2 Targeted panel of 232 genes.                                      Agilent     #>  3 Targeted panel of 8 genes.                                        AmpliSeq    #>  4 ARCHER-HEME gene panel (199 genes)                                ARCHER-HEM… #>  5 ARCHER-SOLID Gene Panel (62 genes)                                ARCHER-SOL… #>  6 Targeted sequencing of various tumor types via bait v3.           bait_v3     #>  7 Targeted sequencing of various tumor types via bait v5.           bait_v5     #>  8 Targeted panel of 387 cancer-related genes.                       bcc_unige_… #>  9 Research (CMO) IMPACT-Heme gene panel version 3.                  HemePACT_v3 #> 10 Targeted sequencing of 503 cancer-associated genes on Illumina H… DFCI_504    #> # … with 44 more rows"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_patients.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Patient IDs in a Study — available_patients","title":"Get All Patient IDs in a Study — available_patients","text":"Get Patient IDs Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_patients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Patient IDs in a Study — available_patients","text":"","code":"available_patients(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_patients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Patient IDs in a Study — available_patients","text":"study_id character string indicating study ID searched. 1 study allowed. NULL, guess default study ID based database URL. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_patients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Patient IDs in a Study — available_patients","text":"dataframe patient_ids given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_patients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Patient IDs in a Study — available_patients","text":"","code":"# \\donttest{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_samples(study_id = \"acc_tcga\") #> # A tibble: 92 × 4 #>    patientId    sampleId        sampleType          studyId  #>    <chr>        <chr>           <chr>               <chr>    #>  1 TCGA-OR-A5J1 TCGA-OR-A5J1-01 Primary Solid Tumor acc_tcga #>  2 TCGA-OR-A5J2 TCGA-OR-A5J2-01 Primary Solid Tumor acc_tcga #>  3 TCGA-OR-A5J3 TCGA-OR-A5J3-01 Primary Solid Tumor acc_tcga #>  4 TCGA-OR-A5J4 TCGA-OR-A5J4-01 Primary Solid Tumor acc_tcga #>  5 TCGA-OR-A5J5 TCGA-OR-A5J5-01 Primary Solid Tumor acc_tcga #>  6 TCGA-OR-A5J6 TCGA-OR-A5J6-01 Primary Solid Tumor acc_tcga #>  7 TCGA-OR-A5J7 TCGA-OR-A5J7-01 Primary Solid Tumor acc_tcga #>  8 TCGA-OR-A5J8 TCGA-OR-A5J8-01 Primary Solid Tumor acc_tcga #>  9 TCGA-OR-A5J9 TCGA-OR-A5J9-01 Primary Solid Tumor acc_tcga #> 10 TCGA-OR-A5JA TCGA-OR-A5JA-01 Primary Solid Tumor acc_tcga #> # … with 82 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Genomic Profiles For a Study or Database — available_profiles","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"Get Available Genomic Profiles Study Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"","code":"available_profiles(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"study_id character vector length 1 indicating study_id. See get_studies() see available studies URL. NULL, return profiles current database url base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"dataframe available genetic profiles profile ids","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Genomic Profiles For a Study or Database — available_profiles","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_profiles() #> ℹ No `study_id` provided. Returning all available genomic profiles for <www.cbioportal.org/api> #> # A tibble: 1,657 × 11 #>    molecularAlteration… datatype name  description showProfileInAn… patientLevel #>    <chr>                <chr>    <chr> <chr>       <lgl>            <lgl>        #>  1 PROTEIN_LEVEL        LOG2-VA… Prot… Protein ex… FALSE            FALSE        #>  2 PROTEIN_LEVEL        Z-SCORE  Prot… Protein ex… TRUE             FALSE        #>  3 COPY_NUMBER_ALTERAT… DISCRETE Puta… Putative c… TRUE             FALSE        #>  4 COPY_NUMBER_ALTERAT… CONTINU… Capp… Capped rel… FALSE            FALSE        #>  5 MUTATION_EXTENDED    MAF      Muta… Mutation d… TRUE             FALSE        #>  6 METHYLATION          CONTINU… Meth… Methylatio… FALSE            FALSE        #>  7 MRNA_EXPRESSION      CONTINU… mRNA… mRNA gene … FALSE            FALSE        #>  8 MRNA_EXPRESSION      Z-SCORE  mRNA… mRNA expre… TRUE             FALSE        #>  9 MRNA_EXPRESSION      Z-SCORE  mRNA… Log-transf… TRUE             FALSE        #> 10 COPY_NUMBER_ALTERAT… DISCRETE Copy… Putative c… TRUE             FALSE        #> # … with 1,647 more rows, and 5 more variables: molecularProfileId <chr>, #> #   studyId <chr>, genericAssayType <chr>, pivotThreshold <dbl>, #> #   sortOrder <chr> available_profiles(study_id = \"acc_tcga\") #> # A tibble: 9 × 8 #>   molecularAlterationT… datatype name  description showProfileInAn… patientLevel #>   <chr>                 <chr>    <chr> <chr>       <lgl>            <lgl>        #> 1 PROTEIN_LEVEL         LOG2-VA… Prot… Protein ex… FALSE            FALSE        #> 2 PROTEIN_LEVEL         Z-SCORE  Prot… Protein ex… TRUE             FALSE        #> 3 COPY_NUMBER_ALTERATI… DISCRETE Puta… Putative c… TRUE             FALSE        #> 4 COPY_NUMBER_ALTERATI… CONTINU… Capp… Capped rel… FALSE            FALSE        #> 5 MUTATION_EXTENDED     MAF      Muta… Mutation d… TRUE             FALSE        #> 6 METHYLATION           CONTINU… Meth… Methylatio… FALSE            FALSE        #> 7 MRNA_EXPRESSION       CONTINU… mRNA… mRNA gene … FALSE            FALSE        #> 8 MRNA_EXPRESSION       Z-SCORE  mRNA… mRNA expre… TRUE             FALSE        #> 9 MRNA_EXPRESSION       Z-SCORE  mRNA… Log-transf… TRUE             FALSE        #> # … with 2 more variables: molecularProfileId <chr>, studyId <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Sample IDs in a Study — available_samples","title":"Get All Sample IDs in a Study — available_samples","text":"Get Sample IDs Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Sample IDs in a Study — available_samples","text":"","code":"available_samples(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Sample IDs in a Study — available_samples","text":"study_id character string indicating study ID searched. 1 study allowed. NULL, guess default study ID based database URL. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Sample IDs in a Study — available_samples","text":"dataframe sample_ids given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Sample IDs in a Study — available_samples","text":"","code":"# \\donttest{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_samples(study_id = \"acc_tcga\") #> # A tibble: 92 × 4 #>    patientId    sampleId        sampleType          studyId  #>    <chr>        <chr>           <chr>               <chr>    #>  1 TCGA-OR-A5J1 TCGA-OR-A5J1-01 Primary Solid Tumor acc_tcga #>  2 TCGA-OR-A5J2 TCGA-OR-A5J2-01 Primary Solid Tumor acc_tcga #>  3 TCGA-OR-A5J3 TCGA-OR-A5J3-01 Primary Solid Tumor acc_tcga #>  4 TCGA-OR-A5J4 TCGA-OR-A5J4-01 Primary Solid Tumor acc_tcga #>  5 TCGA-OR-A5J5 TCGA-OR-A5J5-01 Primary Solid Tumor acc_tcga #>  6 TCGA-OR-A5J6 TCGA-OR-A5J6-01 Primary Solid Tumor acc_tcga #>  7 TCGA-OR-A5J7 TCGA-OR-A5J7-01 Primary Solid Tumor acc_tcga #>  8 TCGA-OR-A5J8 TCGA-OR-A5J8-01 Primary Solid Tumor acc_tcga #>  9 TCGA-OR-A5J9 TCGA-OR-A5J9-01 Primary Solid Tumor acc_tcga #> 10 TCGA-OR-A5JA TCGA-OR-A5JA-01 Primary Solid Tumor acc_tcga #> # … with 82 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metadata on All Available Studies in a Database — available_studies","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"Get Metadata Available Studies Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"","code":"available_studies(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_studies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"dataframe available studies metadata","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/available_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Metadata on All Available Studies in a Database — available_studies","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  available_studies() #> # A tibble: 347 × 13 #>    studyId name  description publicStudy groups status importDate allSampleCount #>    <chr>   <chr> <chr>       <lgl>       <chr>   <int> <chr>               <int> #>  1 acc_tc… Adre… \"TCGA Adre… TRUE        \"PUBL…      0 2022-03-0…             92 #>  2 blca_p… Blad… \"Whole exo… TRUE        \"\"          0 2022-03-0…             34 #>  3 bcc_un… Basa… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…            293 #>  4 all_st… Acut… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             93 #>  5 ampca_… Ampu… \"Exome seq… TRUE        \"PUBL…      0 2022-03-0…            160 #>  6 blca_d… Blad… \"Whole exo… TRUE        \"PUBL…      0 2022-03-0…             50 #>  7 blca_m… Blad… \"Comprehen… TRUE        \"PUBL…      0 2022-03-0…             97 #>  8 blca_b… Blad… \"Whole-exo… TRUE        \"PUBL…      0 2022-03-0…             99 #>  9 blca_m… Blad… \"Genomic P… TRUE        \"PUBL…      0 2022-03-0…            109 #> 10 all_st… Hypo… \"Whole gen… TRUE        \"\"          0 2022-03-0…             44 #> # … with 337 more rows, and 5 more variables: readPermission <lgl>, #> #   cancerTypeId <chr>, referenceGenome <chr>, pmid <chr>, citation <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbioportalR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cbioportalR: An R Package to Access Data on cBioPortal — cbioportalR-package","title":"cbioportalR: An R Package to Access Data on cBioPortal — cbioportalR-package","text":"R client access genomic clinical data `cBioPortal`. package wraps 'cBioPortal's' existing API endpoints R users can easily leverage existing API. Using functions, users can access genomic data mutations, copy number alterations fusions, well data tumor mutational burden ('TMB'), microsatellite instability status ('MSI'), 'FACETS' data select clinical data points (depending study).","code":""},{"path":[]},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbioportalR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cbioportalR: An R Package to Access Data on cBioPortal — cbioportalR-package","text":"Maintainer: Karissa Whiting karissa.whiting@gmail.com (ORCID)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbp_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Core function to retrieve data from cBioPortal API. — cbp_api","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"Core function retrieve data cBioPortal API.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbp_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"","code":"cbp_api(   url_path,   method = NULL,   token = get_cbioportal_token(),   body = NULL,   extra_box = FALSE,   quiet = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbp_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"url_path url path API call method API method use. Must \"get\" \"post\". Default \"get\". token Authentication token, needed. Default get_cbioportal_token() body Arguments passed API call (e.g. sample ID gene IDs) extra_box functions require additional list() wrapping around body idk quiet Returns queried URL. Default TRUE base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbp_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"parsed API response","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/cbp_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Core function to retrieve data from cBioPortal API. — cbp_api","text":"","code":"cbp_api(url_path = \"genes/TP53\", base_url = \"public\") #> $content #> $content$entrezGeneId #> [1] 7157 #>  #> $content$hugoGeneSymbol #> [1] \"TP53\" #>  #> $content$type #> [1] \"protein-coding\" #>  #>  #> $path #> [1] \"api/genes/TP53\" #>  #> $response #> Response [https://www.cbioportal.org/api/genes/TP53] #>   Date: 2022-07-07 02:35 #>   Status: 200 #>   Content-Type: application/json #>   Size: 69 B #>  #>  #> attr(,\"class\") #> [1] \"cbp_api\""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_by_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"Get clinical data attribute, study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_by_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"","code":".get_clinical_by_list_item(   study_id = NULL,   sample_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_by_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_by_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_by_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and sample ID — .get_clinical_by_list_item","text":"","code":".get_clinical_by_list_item(study_id = \"acc_tcga\", sample_id = \"TCGA-OR-A5J2-01\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 7 #>   uniqueSampleKey   uniquePatientKey sampleId patientId studyId clinicalAttribu… #>   <chr>             <chr>            <chr>    <chr>     <chr>   <chr>            #> 1 VENHQS1PUi1BNUoy… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #> # … with 1 more variable: value <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_pat_by_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"Get clinical data attribute, study ID patient ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_pat_by_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"","code":".get_clinical_pat_by_list_item(   study_id = NULL,   patient_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_pat_by_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs patient_id cBioPortal patient_id clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_pat_by_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_clinical_pat_by_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and patient ID — .get_clinical_pat_by_list_item","text":"","code":".get_clinical_pat_by_list_item(study_id = \"msk_impact_2017\",  patient_id = \"P-0001453\",   base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study #> # A tibble: 6 × 5 #>   uniquePatientKey                   patientId studyId    clinicalAttribu… value #>   <chr>                              <chr>     <chr>      <chr>            <chr> #> 1 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… OS_MONTHS        30.47 #> 2 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… OS_STATUS        0:LI… #> 3 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… SAMPLE_COUNT     1     #> 4 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… SEX              Male  #> 5 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… SMOKING_HISTORY  Prev… #> 6 UC0wMDAxNDUzOm1za19pbXBhY3RfMjAxNw P-0001453 msk_impac… VITAL_STATUS     ALIVE"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"Internal Function Get Mutations/CNA/Fusion Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"","code":".get_data_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   data_type = c(\"mutation\", \"cna\", \"fusion\"),   genes = NULL,   panel = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. data_type specify type data return. Options aremutations, cna, fusion genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function.  panel genes NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel  genes NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"dataframe mutations CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal Function to Get Mutations/CNA/Fusion By Sample ID — .get_data_by_sample","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  .get_data_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"),  study_id = \"acc_tcga\", data_type = \"mutation\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> # A tibble: 173 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  2 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  3 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  4 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  5 ZNF787               126208 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  6 PODXL                  5420 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  7 CCDC102A              92922 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  8 TVP23C               201158 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  9 RINL                 126432 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 10 ZNF628                89887 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> # … with 163 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, …  .get_data_by_sample(sample_id = c(\"DS-sig-010-P2\"),  molecular_profile_id = \"blca_plasmacytoid_mskcc_2016_cna\", data_type = \"cna\") #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" #> Molecular Profile ID: \"blca_plasmacytoid_mskcc_2016_cna\" #> Genes: \"All available genes\" #> # A tibble: 2 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 YAP1                  10413 RFMtc2lnLTAxMC1… RFMtc2lnLTAxMDp… blca_plasmacyto… #> 2 CD79B                   974 RFMtc2lnLTAxMC1… RFMtc2lnLTAxMDp… blca_plasmacyto… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int>   .get_data_by_sample(sample_id = c(\"P-0002146-T01-IM3\"),  study_id = \"blca_plasmacytoid_mskcc_2016\", data_type = \"fusion\") #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" #> Molecular Profile ID: \"blca_plasmacytoid_mskcc_2016_fusion\" #> Genes: \"All available genes\" #> # A tibble: 1 × 15 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 UC0wMDAyMTQ2LVQw… UC0wMDAyMTQ2OmJ… blca_plasmacyto… P-00021… P-0002146 blca_p… #> # … with 9 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, ncbiBuild <chr>, center <chr>, #> #   eventInfo <chr>, variantClass <chr>, comments <chr>  # \\donttest{ df_pairs <- data.frame( \"sample_id\" = c(\"s_C_36924L_P001_d\", \"s_C_03LNU8_P001_d\"), \"study_id\" = c(\"prad_msk_2019\"))  .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"mutation\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_mutations #> Genes: \"All available genes\" #> # A tibble: 1 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 TP53                   7157 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… prad_msk_2019_m… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs, genes = 7157, data_type = \"mutation\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_mutations #> Genes: 7157 #> # A tibble: 1 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 TP53                   7157 c19DXzAzTE5VOF9… cF9DXzAzTE5VODp… prad_msk_2019_m… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"cna\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_cna #> Genes: \"All available genes\" #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> .get_data_by_sample(sample_study_pairs = df_pairs, data_type = \"fusion\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: prad_msk_2019_fusion #> Genes: \"All available genes\" #> # A tibble: 0 × 0  df_pairs2 <- data.frame( \"sample_id\" = c(\"P-0002146-T01-IM3\", \"s_C_CAUWT7_P001_d\"),  \"study_id\" = c(\"blca_plasmacytoid_mskcc_2016\", \"prad_msk_2019\"))  .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"mutation\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_mutations and #> prad_msk_2019_mutations #> Genes: \"All available genes\" #> # A tibble: 7 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 TERT                   7015 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 2 TP53                   7157 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 3 NOTCH4                 4855 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 4 BLM                     641 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 5 TP53                   7157 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 6 CDKN1A                 1026 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 7 RB1                    5925 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, chr <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs2, genes = 7157) #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_mutations and #> prad_msk_2019_mutations #> Genes: 7157 #> # A tibble: 2 × 33 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 TP53                   7157 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> 2 TP53                   7157 UC0wMDAyMTQ2LVQ… UC0wMDAyMTQ2OmJ… blca_plasmacyto… #> # … with 28 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"cna\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_cna and prad_msk_2019_cna #> Genes: \"All available genes\" #> NULL .get_data_by_sample(sample_study_pairs = df_pairs2, data_type = \"fusion\") #> Joining, by = \"study_id\" #> The following parameters were used in query: #> Study ID: \"blca_plasmacytoid_mskcc_2016\" and \"prad_msk_2019\" #> Molecular Profile ID: blca_plasmacytoid_mskcc_2016_fusion and #> prad_msk_2019_fusion #> Genes: \"All available genes\" #> # A tibble: 2 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 UC0wMDAyMTQ2LVQw… UC0wMDAyMTQ2OmJ… blca_plasmacyto… P-00021… P-0002146 blca_p… #> 2 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, ncbiBuild <chr>, center <chr>, #> #   eventInfo <chr>, variantClass <chr>, comments <chr>, #> #   site2EntrezGeneId <int>, site2HugoSymbol <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"Endpoints retrieving mutation cna data structurally similar. internal function allows pull data either endpoint. logic sensible default guesses study_id molecular_profile_id NULL","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"","code":".get_data_by_study(   study_id = NULL,   molecular_profile_id = NULL,   data_type = c(\"mutation\", \"cna\", \"fusion\"),   base_url = NULL,   add_hugo = TRUE )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. data_type specify type data return. Options aremutation, cna, fusion. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>) add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) functions default TRUE adds default.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"dataframe mutations CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/dot-get_data_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal Function to Get Mutations/CNA/Fusion By Study ID — .get_data_by_study","text":"","code":"# \\donttest{ set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"mutation\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  2 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  3 ATR                     545 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  4 BCL2                    596 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  5 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  6 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  7 FAT1                   2195 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  8 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  9 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #> 10 FOXA1                  3169 c19DX0UwS0pGSl… cF9DX0UwS0pGSjp… prad_msk_2019_m… #> # … with 16 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_study(study_id = \"prad_msk_2019\", data_type = \"fusion\") #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ19Q… cF9DX0RVNkVDQzp… prad_msk_2019_f… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, site2EntrezGeneId <int>, #> #   site2HugoSymbol <chr>, ncbiBuild <chr>, center <chr>, eventInfo <chr>, #> #   variantClass <chr>, comments <chr>  .get_data_by_study(molecular_profile_id = \"prad_msk_2019_cna\", data_type = \"cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> .get_data_by_study(molecular_profile_id = \"prad_msk_2019_mutations\", data_type = \"mutation\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  2 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  3 ATR                     545 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  4 BCL2                    596 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  5 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  6 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  7 FAT1                   2195 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  8 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  9 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #> 10 FOXA1                  3169 c19DX0UwS0pGSl… cF9DX0UwS0pGSjp… prad_msk_2019_m… #> # … with 16 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … .get_data_by_study(molecular_profile_id = \"prad_msk_2019_fusion\", data_type = \"fusion\") #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ19Q… cF9DX0RVNkVDQzp… prad_msk_2019_f… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, site2EntrezGeneId <int>, #> #   site2HugoSymbol <chr>, ncbiBuild <chr>, center <chr>, eventInfo <chr>, #> #   variantClass <chr>, comments <chr> # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"function grabs known gene aliases given Hugo Symbol. may notice genes -alias pairs always consistent. example get_alias(\"KMT2D\") return \"MLL2\" get_alias(\"MLL2\") return \"KMT2D\" function relies existing cBioPortal API controls database aliases. Therefore, convenience function may want consider carefully curated alias list like gnomeR::impact_gene_info","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"","code":"get_alias(hugo_symbol = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"hugo_symbol hugo symbol return aliases base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"character string aliases","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene Name Alias for a Given Hugo Symbol — get_alias","text":"","code":"get_alias(hugo_symbol = \"FGFR3\", base_url = 'www.cbioportal.org/api') #> # A tibble: 4 × 2 #>   hugo_symbol alias #>   <chr>       <chr> #> 1 FGFR3       ACH   #> 2 FGFR3       CD333 #> 3 FGFR3       CEK2  #> 4 FGFR3       JTK4  get_alias(hugo_symbol = c(\"FGFR3\", \"TP53\"), base_url = 'www.cbioportal.org/api') #> # A tibble: 6 × 2 #>   hugo_symbol alias #>   <chr>       <chr> #> 1 FGFR3       ACH   #> 2 FGFR3       CD333 #> 3 FGFR3       CEK2  #> 4 FGFR3       JTK4  #> 5 TP53        LFS1  #> 6 TP53        p53"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cbioportal_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cBioPortal Access Token — get_cbioportal_token","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"Convenience function retrieves cBioPortal token System Environment variable \"CBIOPORTAL_TOKEN\"","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cbioportal_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"","code":"get_cbioportal_token()"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cbioportal_token.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cbioportal_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get cBioPortal Access Token — get_cbioportal_token","text":"","code":"get_cbioportal_token() #> Warning: No CBIOPORTAL_TOKEN in `.Renviron`. Try `usethis::edit_r_environ()` to add a token #> [1] \"\""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_patient.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"Get clinical data attribute, study ID patient ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_patient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"","code":"get_clinical_by_patient(   study_id = NULL,   patient_id = NULL,   patient_study_pairs = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_patient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs patient_id cBioPortal patient_id patient_study_pairs dataframe columns: patient_id, study_id. Variations capitalization column names accepted. can used place patient_id, study_id, arguments need pull samples several different studies . passed, take overwrite patient_id study_id also passed. clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_patient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_patient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and patient ID — get_clinical_by_patient","text":"","code":"ex <- tibble::tribble( ~patientID, ~study_id, \"P-0001453\", \"blca_nmibc_2017\", \"P-0002166\", \"blca_nmibc_2017\", \"P-0003238\", \"blca_nmibc_2017\", \"P-0000004\", \"msk_impact_2017\", \"P-0000023\", \"msk_impact_2017\")  x <- get_clinical_by_patient(patient_study_pairs = ex,  clinical_attribute = NULL, base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"blca_nmibc_2017\" study #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"Get clinical data attribute, study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"","code":"get_clinical_by_sample(   study_id = NULL,   sample_id = NULL,   sample_study_pairs = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. clinical_attribute one clinical attributes study. none provided, return attributes available studies base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clinical data by attribute, study ID and sample ID — get_clinical_by_sample","text":"","code":"get_clinical_by_sample(study_id = \"acc_tcga\", sample_id = \"TCGA-OR-A5J2-01\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 7 #>   uniqueSampleKey   uniquePatientKey sampleId patientId studyId clinicalAttribu… #>   <chr>             <chr>            <chr>    <chr>     <chr>   <chr>            #> 1 VENHQS1PUi1BNUoy… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #> # … with 1 more variable: value <chr>  ex <- tibble::tribble( ~sample_id, ~study_id, \"P-0001453-T01-IM3\", \"blca_nmibc_2017\", \"P-0002166-T01-IM3\", \"blca_nmibc_2017\", \"P-0003238-T01-IM5\", \"blca_nmibc_2017\", \"P-0000004-T01-IM3\", \"msk_impact_2017\", \"P-0000023-T01-IM3\", \"msk_impact_2017\")  x <- get_clinical_by_sample(sample_study_pairs = ex,  clinical_attribute = NULL, base_url = 'www.cbioportal.org/api') #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"blca_nmibc_2017\" study #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all available clinical data for a specified study — get_clinical_by_study","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"Returns sample-level patient-level clinical data given study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"","code":"get_clinical_by_study(   study_id = NULL,   clinical_attribute = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"study_id study ID clinical_attribute one clinical attributes study. none provided, return attributes available study (available_clinical_attributes(<study_id>)) base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"dataframe available clinical attributes values","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_clinical_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all available clinical data for a specified study — get_clinical_by_study","text":"","code":"get_clinical_by_study(study_id = \"acc_tcga\",  clinical_attribute = \"CANCER_TYPE\", base_url = 'www.cbioportal.org/api') #> # A tibble: 92 × 8 #>    uniqueSampleKey  uniquePatientKey sampleId patientId studyId clinicalAttribu… #>    <chr>            <chr>            <chr>    <chr>     <chr>   <chr>            #>  1 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  2 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  3 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  4 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  5 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  6 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  7 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  8 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #>  9 VENHQS1PUi1BNUo… VENHQS1PUi1BNUo… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #> 10 VENHQS1PUi1BNUp… VENHQS1PUi1BNUp… TCGA-OR… TCGA-OR-… acc_tc… CANCER_TYPE      #> # … with 82 more rows, and 2 more variables: value <chr>, dataLevel <chr>  # \\donttest{ get_clinical_by_study(study_id = \"acc_tcga\", base_url = 'www.cbioportal.org/api') #> ! Sample Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> ! Patient Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study #> # A tibble: 6,292 × 6 #>    uniquePatientKey           patientId studyId clinicalAttribu… value dataLevel #>    <chr>                      <chr>     <chr>   <chr>            <chr> <chr>     #>  1 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… AGE              58    PATIENT   #>  2 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… AJCC_PATHOLOGIC… Stag… PATIENT   #>  3 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… ATYPICAL_MITOTI… Atyp… PATIENT   #>  4 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CAPSULAR_INVASI… Inva… PATIENT   #>  5 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CLIN_M_STAGE     M0    PATIENT   #>  6 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CT_SCAN_PREOP_R… [Unk… PATIENT   #>  7 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… CYTOPLASM_PRESE… Cyto… PATIENT   #>  8 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DAYS_TO_INITIAL… 0     PATIENT   #>  9 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DFS_MONTHS       24.77 PATIENT   #> 10 VENHQS1PUi1BNUoxOmFjY190Y… TCGA-OR-… acc_tc… DFS_STATUS       1:Re… PATIENT   #> # … with 6,282 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CNA By Sample ID — get_cna_by_sample","title":"Get CNA By Sample ID — get_cna_by_sample","text":"Get CNA Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CNA By Sample ID — get_cna_by_sample","text":"","code":"get_cna_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CNA By Sample ID — get_cna_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function.  panel genes NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel  genes NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CNA By Sample ID — get_cna_by_sample","text":"data frame CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CNA By Sample ID — get_cna_by_sample","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  get_cna_by_sample(sample_id = c(\"s_C_36924L_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"prad_msk_2019_cna\" #> Genes: \"All available genes\" #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CNA By Study — get_cna_by_study","title":"Get CNA By Study — get_cna_by_study","text":"Get CNA Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CNA By Study — get_cna_by_study","text":"","code":"get_cna_by_study(   study_id = NULL,   molecular_profile_id = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CNA By Study — get_cna_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) functions default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CNA By Study — get_cna_by_study","text":"dataframe CNAs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_cna_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CNA By Study — get_cna_by_study","text":"","code":"get_cna_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> get_cna_by_study(molecular_profile_id = \"prad_msk_2019_cna\") #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_entrez_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"Get Entrez Gene ID given set Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_entrez_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"","code":"get_entrez_id(hugo_symbol = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_entrez_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"hugo_symbol character vector Hugo Symbols base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_entrez_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"dataframe Entrez Gene IDs Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_entrez_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Entrez Gene ID for a given set of Hugo Symbols — get_entrez_id","text":"","code":"get_entrez_id(hugo_symbol = \"TAP1\", base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         6890 TAP1           protein-coding get_entrez_id(hugo_symbol = c(\"FGFR1\", \"TP53\") , base_url = 'www.cbioportal.org/api') #> # A tibble: 2 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         7157 TP53           protein-coding #> 2         2260 FGFR1          protein-coding"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fusions By Sample ID — get_fusions_by_sample","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"Get Fusions Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"","code":"get_fusions_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function.  panel genes NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel  genes NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"data frame Fusions","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Fusions By Sample ID — get_fusions_by_sample","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  get_fusions_by_sample(sample_id = c(\"s_C_CAUWT7_P001_d\"),                  study_id = \"prad_msk_2019\") #> The following parameters were used in query: #> Study ID: \"prad_msk_2019\" #> Molecular Profile ID: \"prad_msk_2019_fusion\" #> Genes: \"All available genes\" #> # A tibble: 1 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, site2EntrezGeneId <int>, #> #   site2HugoSymbol <chr>, ncbiBuild <chr>, center <chr>, eventInfo <chr>, #> #   variantClass <chr>, comments <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Fusions By Study — get_fusions_by_study","title":"Get Fusions By Study — get_fusions_by_study","text":"Get Fusions Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Fusions By Study — get_fusions_by_study","text":"","code":"get_fusions_by_study(   study_id = NULL,   molecular_profile_id = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Fusions By Study — get_fusions_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. molecular_profile_id molecular profile query mutations. NULL, guesses molecular_profile_id based study ID. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) functions default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Fusions By Study — get_fusions_by_study","text":"dataframe fusions","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_fusions_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Fusions By Study — get_fusions_by_study","text":"","code":"get_fusions_by_study(molecular_profile_id = \"prad_msk_2019_fusion\") #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 4 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ19Q… cF9DX0RVNkVDQzp… prad_msk_2019_f… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, site2EntrezGeneId <int>, #> #   site2HugoSymbol <chr>, ncbiBuild <chr>, center <chr>, eventInfo <chr>, #> #   variantClass <chr>, comments <chr>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_gene_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"Retrieve Genes Included Specified Panel ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_gene_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"","code":"get_gene_panel(panel_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_gene_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"panel_id name panel. See available_gene_panels() get panel ID base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_gene_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"dataframe genes specified panel","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_gene_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Genes Included For a Specified Panel ID — get_gene_panel","text":"","code":"get_gene_panel(panel_id = \"IMPACT468\", base_url = 'www.cbioportal.org/api') #> # A tibble: 469 × 4 #>    genePanelId entrezGeneId hugoGeneSymbol description                           #>    <chr>              <int> <chr>          <chr>                                 #>  1 IMPACT468             25 ABL1           Targeted (468 cancer genes) sequenci… #>  2 IMPACT468          84142 ABRAXAS1       Targeted (468 cancer genes) sequenci… #>  3 IMPACT468             90 ACVR1          Targeted (468 cancer genes) sequenci… #>  4 IMPACT468          27161 AGO2           Targeted (468 cancer genes) sequenci… #>  5 IMPACT468            207 AKT1           Targeted (468 cancer genes) sequenci… #>  6 IMPACT468            208 AKT2           Targeted (468 cancer genes) sequenci… #>  7 IMPACT468          10000 AKT3           Targeted (468 cancer genes) sequenci… #>  8 IMPACT468            238 ALK            Targeted (468 cancer genes) sequenci… #>  9 IMPACT468            242 ALOX12B        Targeted (468 cancer genes) sequenci… #> 10 IMPACT468         139285 AMER1          Targeted (468 cancer genes) sequenci… #> # … with 459 more rows"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get A List of Genes for a Specified Database — get_genes","title":"Get A List of Genes for a Specified Database — get_genes","text":"Get List Genes Specified Database","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get A List of Genes for a Specified Database — get_genes","text":"","code":"get_genes(base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get A List of Genes for a Specified Database — get_genes","text":"base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get A List of Genes for a Specified Database — get_genes","text":"dataframe gene ids, hugo symbols, gene types","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get A List of Genes for a Specified Database — get_genes","text":"","code":"# \\donttest{ get_genes(base_url = 'www.cbioportal.org/api') #> # A tibble: 45,550 × 3 #>    entrezGeneId hugoGeneSymbol type           #>           <int> <chr>          <chr>          #>  1    101340252 SNORD121B      snoRNA         #>  2         3360 HTR4           protein-coding #>  3    100113379 SNORD121A      snoRNA         #>  4        -3510 MIR-124A-1/5P  miRNA          #>  5         3362 HTR6           protein-coding #>  6         3363 HTR7           protein-coding #>  7    106481909 RNU6-654P      pseudogene     #>  8        56987 BBX            protein-coding #>  9    106479427 RN7SL563P      pseudogene     #> 10    107985793 ARL14EPP1      pseudogene     #> # … with 45,540 more rows # }"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"Get Genomic Information Sample IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"","code":"get_genetics_by_sample(   sample_id = NULL,   study_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function.  panel genes NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel  genes NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"list mutations, cna fusions (available)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Genomic Information By Sample IDs — get_genetics_by_sample","text":"","code":"get_genetics_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"),  study_id = \"acc_tcga\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_gistic\" #> Genes: \"All available genes\" #> ! No \"fusion\" data returned. Error:  No molecular profile for `` data_type = `fusion` `` found in \"acc_tcga\".  See `` available_profiles('`acc_tcga`') `` #> $mutation #> # A tibble: 173 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  2 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  3 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  4 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  5 ZNF787               126208 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  6 PODXL                  5420 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  7 CCDC102A              92922 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  8 TVP23C               201158 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  9 RINL                 126432 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 10 ZNF628                89887 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> # … with 163 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … #>  #> $cna #> # A tibble: 417 × 9 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 RNF180               285671 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  2 SRM                    6723 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  3 CHD5                  26038 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  4 PRKACB                 5567 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  5 ADGRL4                64123 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  6 DNAJC6                 9829 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  7 KCNAB2                 8514 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  8 PER3                   8863 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #>  9 C1ORF52              148423 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #> 10 ICMT                  23463 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_gistic  #> # … with 407 more rows, and 4 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, alteration <int> #>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Genomic Information By Study — get_genetics_by_study","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"Get Genomic Information Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"","code":"get_genetics_by_study(study_id = NULL, add_hugo = TRUE, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"study_id study ID query mutations. NULL, guesses study ID based molecular_profile_id. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) functions default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"list mutations, cna fusions (available)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_genetics_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Genomic Information By Study — get_genetics_by_study","text":"","code":"get_genetics_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_cna\" molecular profile in the \"prad_msk_2019\" study #> ℹ Returning all data for the \"prad_msk_2019_fusion\" molecular profile in the \"prad_msk_2019\" study #> $mutation #> # A tibble: 26 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  2 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  3 ATR                     545 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  4 BCL2                    596 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  5 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  6 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  7 FAT1                   2195 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  8 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  9 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #> 10 FOXA1                  3169 c19DX0UwS0pGSl… cF9DX0UwS0pGSjp… prad_msk_2019_m… #> # … with 16 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … #>  #> $cna #> # A tibble: 1 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey  uniquePatientKey molecularProfil… #>   <chr>                 <int> <chr>            <chr>            <chr>            #> 1 PTEN                   5728 c19DXzM2OTI0TF9… cF9DXzM2OTI0TDp… prad_msk_2019_c… #> # … with 4 more variables: sampleId <chr>, patientId <chr>, studyId <chr>, #> #   alteration <int> #>  #> $fusion #> # A tibble: 4 × 17 #>   uniqueSampleKey   uniquePatientKey molecularProfil… sampleId patientId studyId #>   <chr>             <chr>            <chr>            <chr>    <chr>     <chr>   #> 1 c19DX0NBVVdUN19Q… cF9DX0NBVVdUNzp… prad_msk_2019_f… s_C_CAU… p_C_CAUW… prad_m… #> 2 c19DX0RVNkVDQ19Q… cF9DX0RVNkVDQzp… prad_msk_2019_f… s_C_DU6… p_C_DU6E… prad_m… #> 3 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> 4 c19DX1ZDNlA5QV9Q… cF9DX1ZDNlA5QTp… prad_msk_2019_f… s_C_VC6… p_C_VC6P… prad_m… #> # … with 11 more variables: site1EntrezGeneId <int>, site1HugoSymbol <chr>, #> #   site1Chromosome <chr>, site1Position <int>, site2EntrezGeneId <int>, #> #   site2HugoSymbol <chr>, ncbiBuild <chr>, center <chr>, eventInfo <chr>, #> #   variantClass <chr>, comments <chr> #>"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_hugo_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"Get Hugo Symbol given set Entrez IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_hugo_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"","code":"get_hugo_symbol(entrez_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_hugo_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"entrez_id character numeric vector Entrez gene IDs base_url database URL query","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_hugo_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"dataframe Entrez Gene IDs Hugo Symbols","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_hugo_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Hugo Symbol for a given set of Entrez IDs — get_hugo_symbol","text":"","code":"get_hugo_symbol(entrez_id = 2261, base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         2261 FGFR3          protein-coding get_hugo_symbol(entrez_id = c(2261, 7157) , base_url = 'www.cbioportal.org/api') #> # A tibble: 2 × 3 #>   entrezGeneId hugoGeneSymbol type           #>          <int> <chr>          <chr>          #> 1         7157 TP53           protein-coding #> 2         2261 FGFR3          protein-coding"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mutations By Sample ID — get_mutations_by_sample","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"Get Mutations Sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"","code":"get_mutations_by_sample(   sample_id = NULL,   study_id = NULL,   molecular_profile_id = NULL,   sample_study_pairs = NULL,   genes = NULL,   panel = NULL,   add_hugo = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"sample_id vector sample IDs (character) study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. genes vector Entrez ids Hugo symbols. Hugo symbols supplied, converted entrez ids using get_entrez_id() function.  panel genes NULL (default), return gene results available genomic data sample. panel One panel IDs query (e.g. 'IMPACT468'). panel  genes NULL (default), return gene results available genomic data sample. add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"data frame mutations (maf file format)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mutations By Sample ID — get_mutations_by_sample","text":"","code":"get_mutations_by_sample(sample_id = c(\"TCGA-OR-A5J2-01\",\"TCGA-OR-A5J6-01\"), study_id = \"acc_tcga\", base_url = \"public\") #> The following parameters were used in query: #> Study ID: \"acc_tcga\" #> Molecular Profile ID: \"acc_tcga_mutations\" #> Genes: \"All available genes\" #> # A tibble: 173 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  2 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  3 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  4 ZFPM1                161882 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  5 ZNF787               126208 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  6 PODXL                  5420 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  7 CCDC102A              92922 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  8 TVP23C               201158 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #>  9 RINL                 126432 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> 10 ZNF628                89887 VENHQS1PUi1BNU… VENHQS1PUi1BNUo… acc_tcga_mutati… #> # … with 163 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, …"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mutations By Study ID — get_mutations_by_study","title":"Get Mutations By Study ID — get_mutations_by_study","text":"Get Mutations Study ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mutations By Study ID — get_mutations_by_study","text":"","code":"get_mutations_by_study(   study_id = NULL,   molecular_profile_id = NULL,   add_hugo = TRUE,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mutations By Study ID — get_mutations_by_study","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs molecular_profile_id string indicating molecular profile ID pull data. ID supplied, guess molecular profile ID based study ID. 1 molecular profile ID can passed. mutations 1 study needed, see sample_study_pairs add_hugo Logical indicating whether HugoSymbol added results. cBioPortal API return default (EntrezId) function's default TRUE adds default. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mutations By Study ID — get_mutations_by_study","text":"dataframe mutations (maf file format)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_mutations_by_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mutations By Study ID — get_mutations_by_study","text":"","code":"get_mutations_by_study(study_id = \"prad_msk_2019\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  2 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  3 ATR                     545 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  4 BCL2                    596 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  5 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  6 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  7 FAT1                   2195 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  8 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  9 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #> 10 FOXA1                  3169 c19DX0UwS0pGSl… cF9DX0UwS0pGSjp… prad_msk_2019_m… #> # … with 16 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, … get_mutations_by_study(molecular_profile_id = \"prad_msk_2019_mutations\") #> ℹ Returning all data for the \"prad_msk_2019_mutations\" molecular profile in the \"prad_msk_2019\" study #> # A tibble: 26 × 33 #>    hugoGeneSymbol entrezGeneId uniqueSampleKey uniquePatientKey molecularProfil… #>    <chr>                 <int> <chr>           <chr>            <chr>            #>  1 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  2 ZFHX3                   463 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  3 ATR                     545 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  4 BCL2                    596 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  5 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  6 ETV1                   2115 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  7 FAT1                   2195 c19DX004WDQyVF… cF9DX004WDQyVDp… prad_msk_2019_m… #>  8 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #>  9 MSH6                   2956 c19DX1A4SzNUUl… cF9DX1A4SzNUUjp… prad_msk_2019_m… #> 10 FOXA1                  3169 c19DX0UwS0pGSl… cF9DX0UwS0pGSjp… prad_msk_2019_m… #> # … with 16 more rows, and 28 more variables: sampleId <chr>, patientId <chr>, #> #   studyId <chr>, center <chr>, mutationStatus <chr>, validationStatus <chr>, #> #   tumorAltCount <int>, tumorRefCount <int>, normalAltCount <int>, #> #   normalRefCount <int>, startPosition <int>, endPosition <int>, #> #   referenceAllele <chr>, proteinChange <chr>, mutationType <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>, …"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_panel_by_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"Get Gene Panel study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_panel_by_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"","code":"get_panel_by_sample(   study_id = NULL,   sample_id = NULL,   sample_study_pairs = NULL,   base_url = NULL )"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_panel_by_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"study_id string indicating study ID pull data. study ID, guess study ID based URL inform. 1 study ID can passed. mutations/cna 1 study needed, see sample_study_pairs sample_id vector sample IDs (character) sample_study_pairs dataframe columns: sample_id, study_id molecular_profile_id (optional). Variations capitalization column names accepted. can used place sample_id, study_id, molecular_profile_id arguments need pull samples several different studies . passed take overwrite sample_id, study_id, molecular_profile_id also passed. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_panel_by_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"dataframe specific clinical attribute","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_panel_by_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Gene Panel by study ID and sample ID — get_panel_by_sample","text":"","code":"get_panel_by_sample(study_id = \"blca_plasmacytoid_mskcc_2016\",  sample_id = \"DS-sig-010-P2\",  base_url = 'www.cbioportal.org/api') #> # A tibble: 1 × 3 #>   sampleId      studyId                      genePanel #>   <chr>         <chr>                        <chr>     #> 1 DS-sig-010-P2 blca_plasmacytoid_mskcc_2016 IMPACT410"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_samples_by_patient.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"Get sample IDs given set patient IDs","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_samples_by_patient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"","code":"get_samples_by_patient(patient_id = NULL, study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_samples_by_patient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"patient_id character string sample IDs query study_id character string indicating study ID searched. 1 study allowed. NULL, guess default study ID based database URL. base_url database URL query NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_samples_by_patient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"dataframe patient IDs corresponding sample IDs. patient multiple samples, multiple rows per patient.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_samples_by_patient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sample IDs for a given set of patient IDs — get_samples_by_patient","text":"","code":"get_samples_by_patient(patient_id = c(\"P-0000034\", \"P-0000036\")) #> ℹ No `study_id` provided. Using \"msk_impact_2017\" as default study #>   patientId          sampleId          sampleType         studyId #> 1 P-0000034 P-0000034-T01-IM3 Primary Solid Tumor msk_impact_2017 #> 2 P-0000036 P-0000036-T01-IM3 Primary Solid Tumor msk_impact_2017"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_study_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"Get Metadata Available Studies Database Specified Study","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_study_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"","code":"get_study_info(study_id = NULL, base_url = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_study_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"study_id one study IDs (see available_studies() lookup IDs) base_url database URL query. NULL default URL set set_cbioportal_db(<your_db>)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_study_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"dataframe study metadata","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/get_study_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Metadata on All Available Studies in Database or a Specified Study — get_study_info","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  get_study_info(\"acc_tcga\") #>                                               name #> 1 Adrenocortical Carcinoma (TCGA, Firehose Legacy) #>                                                                                                                                                                                     description #> 1 TCGA Adrenocortical Carcinoma. Source data from <A HREF=\"http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/\">GDAC Firehose<\/A>. Previously known as TCGA Provisional. #>   publicStudy groups status          importDate allSampleCount #> 1        TRUE PUBLIC      0 2022-03-04 17:47:56             92 #>   sequencedSampleCount cnaSampleCount mrnaRnaSeqSampleCount #> 1                   90             90                     0 #>   mrnaRnaSeqV2SampleCount mrnaMicroarraySampleCount miRnaSampleCount #> 1                      79                         0                0 #>   methylationHm27SampleCount rppaSampleCount massSpectrometrySampleCount #> 1                          0              46                           0 #>   completeSampleCount readPermission  studyId cancerTypeId #> 1                  75           TRUE acc_tcga          acc #>            cancerType.name cancerType.dedicatedColor cancerType.shortName #> 1 Adrenocortical Carcinoma                    Purple                  ACC #>   cancerType.parent cancerType.cancerTypeId referenceGenome #> 1     adrenal_gland                     acc            hg19"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/impact_gene_info.html","id":null,"dir":"Reference","previous_headings":"","what":"IMPACT Gene Meta Data — impact_gene_info","title":"IMPACT Gene Meta Data — impact_gene_info","text":"Dataframe labeling genes found IMPACT along corresponding platform Entrez ID.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/impact_gene_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMPACT Gene Meta Data — impact_gene_info","text":"","code":"impact_gene_info"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/impact_gene_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMPACT Gene Meta Data — impact_gene_info","text":"data frame 470 genes hugo_symbol Factor w/ 574 levels, Column containing HUGO symbols genes included IMPACT entrez_id Integer, contains Entrez IDs genes included IMPACT platform_341 Character, indicates whether gene included IMPACT platform 341. Options included included platform_410 Character, indicates whether gene included IMPACT platform 410. Options included included platform_468 Character, indicates whether gene included IMPACT platform 468. Options included included alias nested dataframe aliases gene corresponding entrez gene ids aliases exist","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/impact_gene_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IMPACT Gene Meta Data — impact_gene_info","text":"http://www.cbioportal.org/","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL. — null-default","title":"Default value for NULL. — null-default","text":"Default value NULL.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/set_cbioportal_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to cBioPortal DB — set_cbioportal_db","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"function sets base cBioPortal url","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/set_cbioportal_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"","code":"set_cbioportal_db(db = NULL)"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/set_cbioportal_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"db database URL use base URL calls, \"public\" https://www.cbioportal.org/","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/set_cbioportal_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/set_cbioportal_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to cBioPortal DB — set_cbioportal_db","text":"","code":"set_cbioportal_db(db = \"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/test_cbioportal_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"Helps troubleshoot API issues R session","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/test_cbioportal_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"","code":"test_cbioportal_db()"},{"path":"https://karissawhiting.github.io/cbioportalR/reference/test_cbioportal_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"Karissa Whiting, Daniel D. Sjoberg","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/reference/test_cbioportal_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the Database Connection Anytime During your R Session — test_cbioportal_db","text":"","code":"set_cbioportal_db(\"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\"  test_cbioportal_db() #> ✔ You are successfully connected!"},{"path":"https://karissawhiting.github.io/cbioportalR/news/index.html","id":"cbioportalr-100","dir":"Changelog","previous_headings":"","what":"cbioportalR 1.0.0","title":"cbioportalR 1.0.0","text":"first release submitted CRAN, includes updates (listed versions 0.2.0 0.2.1) made since last Github release (0.1.0). Package overhauled since first release (0.1.0), code backwards compatible version.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/news/index.html","id":"summary-of-updates-since-1-0-0","dir":"Changelog","previous_headings":"","what":"Summary of Updates (since 0.1.0)","title":"cbioportalR 1.0.0","text":"Authentication schema updated. Package-level environmental variable can now set specifies login credentials session Functionality pull fusion data added Users can pull data study ID, sample ID, patient ID Update get_genomics_by_sample() related functions pull gene data available select samples instead pulling data IMPACT genes default Allow users pass Hugo Symbols Panel IDs get_genomics_by_sample() related functions.","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/news/index.html","id":"cbioportalr-021","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.2.1","title":"cbioportalR 0.2.1","text":"Update get_genomics_by_sample() related functions pull gene data available selected sample default instead pulling data IMPACT genes default. change default results user specify genes, return results previously include results non IMPACT gene mutations, CNA fusions, available. Allow users pass Hugo Symbols get_genomics_by_sample() related functions (previously specify Entrez Gene ID NULL) (#33) Allow users pass gene panels get_genomics_by_sample() related functions new panel argument. Previously specify genes specified sets gene IDs. (#15) Update functions take sample ID-study ID patient ID-study ID pairs less stringent data frame columns names accept. Previously functions accepted snake case (e.g. sample_id, study_id), now accept capitalization/delimiters (e.g. sampleID, sample id) (#16)","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/news/index.html","id":"cbioportalr-020","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.2.0","title":"cbioportalR 0.2.0","text":"Update internals functions exception cbp_api() Genomic data pulled common internal functions .get_data_by_study() .get_data_by_sample() wrappers data type Updated function names specify user pulling study sample ID Authentication schema updated. Package level environment variable now set instead global variable base URL specification Updates documentation Added extensive error messaging using {cli} Added unit tests Fixed fusion functionality. User can now pull fusion data study ID sample ID","code":""},{"path":"https://karissawhiting.github.io/cbioportalR/news/index.html","id":"cbioportalr-010","dir":"Changelog","previous_headings":"","what":"cbioportalR 0.1.0","title":"cbioportalR 0.1.0","text":"First release - basic API wrapping functionality ","code":""}]
